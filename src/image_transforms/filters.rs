use anyhow::Result;
use super::filter::Filter;

#[allow(unused)]
pub fn bloom() -> Result<Filter> {
	Filter::new(
		vec![
			vec![0.01, 0.03, 0.01],
			vec![0.03, 1.00, 0.03],
			vec![0.01, 0.03, 0.01],
		], vec![
			vec![0.01, 0.03, 0.01],
			vec![0.03, 1.00, 0.03],
			vec![0.01, 0.03, 0.01],
		], vec![
			vec![0.01, 0.03, 0.01],
			vec![0.03, 1.00, 0.03],
			vec![0.01, 0.03, 0.01],
		]
	)
}

#[allow(unused)]
pub fn edge_5x5() -> Result<Filter> {
	Filter::new(
		vec![
			vec![0.125, 0.125, 0.125, 0.125, 0.125],
			vec![0.125, 0.000, 0.000, 0.000, 0.125],
			vec![0.125, 0.000, -2.00, 0.000, 0.125],
			vec![0.125, 0.000, 0.000, 0.000, 0.125],
			vec![0.125, 0.125, 0.125, 0.125, 0.125],
		], vec![
			vec![0.125, 0.125, 0.125, 0.125, 0.125],
			vec![0.125, 0.000, 0.000, 0.000, 0.125],
			vec![0.125, 0.000, -2.00, 0.000, 0.125],
			vec![0.125, 0.000, 0.000, 0.000, 0.125],
			vec![0.125, 0.125, 0.125, 0.125, 0.125],
		], vec![
			vec![0.125, 0.125, 0.125, 0.125, 0.125],
			vec![0.125, 0.000, 0.000, 0.000, 0.125],
			vec![0.125, 0.000, -2.00, 0.000, 0.125],
			vec![0.125, 0.000, 0.000, 0.000, 0.125],
			vec![0.125, 0.125, 0.125, 0.125, 0.125],
		]
	)
}

#[allow(unused)]
pub fn edge_detect() -> Result<Filter> {
	Filter::new(
		vec![
			vec![-1.0, -2.0, -1.0],
			vec![ 0.0,  0.0,  0.0],
			vec![ 1.0,  2.0,  1.0],
		], vec![
			vec![-1.0, -2.0, -1.0],
			vec![ 0.0,  0.0,  0.0],
			vec![ 1.0,  2.0,  1.0],
		], vec![
			vec![-1.0, -2.0, -1.0],
			vec![ 0.0,  0.0,  0.0],
			vec![ 1.0,  2.0,  1.0],
		]
	)
}

#[allow(unused)]
pub fn edge_multicolor() -> Result<Filter> {
	Filter::new(
		vec![
			vec![-1.0, 0.0, 1.0],
			vec![-1.0, 0.0, 1.0],
			vec![-1.0, 0.0, 1.0],
		], vec![
			vec![0.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0],
		], vec![
			vec![-1.0, -1.0, -1.0],
			vec![ 0.0,  0.0,  0.0],
			vec![ 1.0,  1.0,  1.0],
		]
	)
}

#[allow(unused)]
pub fn gaussian_blur() -> Result<Filter> {
	Filter::new(
		vec![
			vec![0.004, 0.016, 0.024, 0.016, 0.004],
			vec![0.016, 0.064, 0.096, 0.064, 0.016],
			vec![0.024, 0.096, 0.144, 0.096, 0.024],
			vec![0.016, 0.064, 0.096, 0.064, 0.016],
			vec![0.004, 0.016, 0.024, 0.016, 0.004],
		], vec![
			vec![0.004, 0.016, 0.024, 0.016, 0.004],
			vec![0.016, 0.064, 0.096, 0.064, 0.016],
			vec![0.024, 0.096, 0.144, 0.096, 0.024],
			vec![0.016, 0.064, 0.096, 0.064, 0.016],
			vec![0.004, 0.016, 0.024, 0.016, 0.004],
		], vec![
			vec![0.004, 0.016, 0.024, 0.016, 0.004],
			vec![0.016, 0.064, 0.096, 0.064, 0.016],
			vec![0.024, 0.096, 0.144, 0.096, 0.024],
			vec![0.016, 0.064, 0.096, 0.064, 0.016],
			vec![0.004, 0.016, 0.024, 0.016, 0.004],
		]
	)
}

#[allow(unused)]
pub fn useless() -> Result<Filter> {
	Filter::new(
		vec![
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
			vec![0.0, 0.0, 1.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
		], vec![
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
			vec![0.0, 0.0, 1.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
		], vec![
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
			vec![0.0, 0.0, 1.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
			vec![0.0, 0.0, 0.0, 0.0, 0.0],
		]
	)
}
